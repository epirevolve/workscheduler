IDE: pycharm
VCS: github
    repository: https://github.com/epirevolve/workscheduler
Ticket: trello
    https://trello.com

Initial Setting:
    1. install pycharm
    2. create an account on github and trello (if not having)
    3. clone the repository
    4. create a isolated environment
        on pycharm
        a. open File -> Settings -> Project: xxx
            shortcut: Ctrl + Alt + s
            xxx is your project name
        b. open Project Interpreter
        c. click a gear icon and then click a Add...
        d. confirm the isolated environment settings
            Virtualenv and New Environment
            "Base interpreter" is python 3.6
            not check "Inherit global packages" and "Make available to all project"
        e. click ok
        f. confirm project interpreter is what you made now
            it will be Python 3.6(xxx) this time
            xxx is your project name
        g. click apply
    5. confirm the isolated environment is activated
        on pycharm
        a. open a terminal tool window
            shortcut: Alt + F12
        b. confirm your prompt be whether (venv) or not
            if not
                close pycharm and reopen project again
                or
                on terminal tool window, run below command
                    . venv/bin/activate
    6. restore packages
        on a terminal tool window of pycharm
        a. install packages by pip
            run below command
                pip install -r requirements.txt
        b. confirm packages
            run below command
                pip freeze
            maybe many packages are shown
            if not
                re-execute from 5
        c. install package by npm
            run below command
                npm install
        d. confirm packages
            run below command
                npm list
            maybe many packages are shown
    7. test setting
        on pycharm
        a. open File -> Settings -> Project: xxx
            shortcut: Ctrl + Alt + s
            xxx is your project name
        b. open Tools -> Python Integrated Tools
        c. set "Default test runner" to pytest
    8. connect to trello
        on pycharm
        a. open -> Tools -> Tasks & Contexts -> Configure Servers
        b. click plus icon to add server
        c. select trello
        d. get a token by access "Where can I get authorization token?" link
        e. fill token, board and lists
            board is project name
            list is "ToDo"
        f. test connection

Project Setting:
    1. create a database and import test data
        * this action will be required every time when the database definition is changed
        on a terminal tool window of pycharm
        run below commands
            export FLASK_APP=runserver.py
            flask init-db
            flask set-test-db
                "Set the database to test." will be displayed

Gulp Tasks:
    1. convert jsx to js
        react sources are written by jsx
        need to convert its to js source
        on a terminal tool window of pycharm
        run below command
            gulp babel
    2. minify script
        almost don't need to minify files because splitChunk work to minify files when doing task by webpack
        if need to minify manually, run below command on a terminal tool window of pycharm
            gulp jsmin

Run workscheduler:
    1. right click of a below file
        runserver.py
    2. click "run runserver.py"
    3. access a site from browser
        click url its displayed on a run tool window
        or
        access below url
            http://127.0.0.1:5000/
    4. login with below users
        administrator:
            login id: admin
        user:
            login id: user
        all initial passwords are 'p' + login id

Open task and select ticket:
    1. click drop down on right upper side
        it will display 'Default task' if you've never touch
    2. click "Open Task..."
    3. select trello ticket you willing to do
    4. name branch properly and update state "Working"
    5. branch from develop
    6. click "ok"

Close task
    1. open Tools -> Tasks & Contexts -> Close Active Task...
        shortcut: Shift + Alt + w
    2. confirm state
        commit changes, merge branch and update issue status are checked
        update issue states is Complete
    3. click ok and confirm your changes committed properly
    4. if you do next task, open other task

Ticket:
    ticket should be a few days work or less.
    input below format
    Title
        brief summary or purpose

        e.g) fix oooo bug
        e.g) can remove affiliation
    Description
        write belows
            workload days
            user story
            associated file
            caution

        e.g) 2 days
             click remove button make this oooo removed
             oooo.py, ooxx.py
             take care about id inside xxxx


Mainly using frameworks:
    SQLAlchemy
    Flask
    Flask-Login
    Flask-WTF
    React
    Redux

Util commands:
	remove all image: for /f %T IN ('docker images --format "{{.ID}}"') DO docker rmi -f %T
	remove all container: for /f %T IN ('docker ps -a') DO docker rm -f %T